import e,{useRef as n,useCallback as t,useState as o,useEffect as r,useContext as a,createContext as l}from"react";import{AudioSession as s,useLocalParticipant as c,useDataChannel as i,LiveKitRoom as d,registerGlobals as u}from"@livekit/react-native";function _(){return _=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)({}).hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e},_.apply(null,arguments)}const v="0.5.1",p=({onReady:n,isConnected:t,callbacks:o,sendMessage:a,clientTools:l={},updateCurrentEventId:s})=>{const{localParticipant:d}=c(),u=e.useRef(1);return r(()=>{t&&d&&n(d)},[t,d,n]),i(e=>{var n;const t=new TextDecoder,r=JSON.parse(t.decode(e.payload));if("object"!=typeof(c=r)||null===c||!("type"in c))return void(null==o.onDebug||o.onDebug({type:"invalid_event",message:r}));var c;const i=function(e){switch(e.type){case"user_transcript":return e.user_transcription_event.user_transcript;case"agent_response":return e.agent_response_event.agent_response;default:return null}}(r);var d;if(null!==i&&(null==o.onMessage||o.onMessage({message:i,source:"user_transcript"===r.type?"user":"ai"})),null!=(n=e.from)&&n.isAgent&&(null==o.onModeChange||o.onModeChange({mode:null!=(d=e.from)&&d.isSpeaking?"speaking":"listening"}),"agent_response"===r.type&&s)){const e=u.current++;s(e)}switch(r.type){case"ping":a({type:"pong",event_id:r.ping_event.event_id});break;case"client_tool_call":(async e=>{if(e.client_tool_call.tool_name in l)try{var n;const t=null!=(n=await l[e.client_tool_call.tool_name](e.client_tool_call.parameters))?n:"Client tool execution successful.",o="object"==typeof t?JSON.stringify(t):String(t);a({type:"client_tool_result",tool_call_id:e.client_tool_call.tool_call_id,result:o,is_error:!1})}catch(n){null==o.onError||o.onError(`Client tool execution failed with following error: ${null==n?void 0:n.message}`,{clientToolName:e.client_tool_call.tool_name}),a({type:"client_tool_result",tool_call_id:e.client_tool_call.tool_call_id,result:`Client tool execution failed: ${null==n?void 0:n.message}`,is_error:!0})}else{if(o.onUnhandledClientToolCall)return void o.onUnhandledClientToolCall(e.client_tool_call);const n=`Client tool with name ${e.client_tool_call.tool_name} is not defined on client`;null==o.onError||o.onError(n,{clientToolName:e.client_tool_call.tool_name}),a({type:"client_tool_result",tool_call_id:e.client_tool_call.tool_call_id,result:n,is_error:!0})}})(r);break;case"audio":null==o.onAudio||o.onAudio(r.audio_event.audio_base_64);break;case"vad_score":null==o.onVadScore||o.onVadScore({vadScore:r.vad_score_event.vad_score});break;case"interruption":null==o.onInterruption||o.onInterruption(r.interruption_event);break;case"mcp_tool_call":null==o.onMCPToolCall||o.onMCPToolCall(r.mcp_tool_call);break;case"mcp_connection_status":null==o.onMCPConnectionStatus||o.onMCPConnectionStatus(r.mcp_connection_status);break;case"agent_tool_response":null==o.onAgentToolResponse||o.onAgentToolResponse(r.agent_tool_response);break;case"conversation_initiation_metadata":null==o.onConversationMetadata||o.onConversationMetadata(r.conversation_initiation_metadata_event);break;case"asr_initiation_metadata":null==o.onAsrInitiationMetadata||o.onAsrInitiationMetadata(r.asr_initiation_metadata_event);break;case"agent_chat_response_part":null==o.onAgentChatResponsePart||o.onAgentChatResponsePart(r.text_response_part);break;default:null==o.onDebug||o.onDebug(r)}}),null},g=({children:n,serverUrl:t,token:o,connect:r,onConnected:a,onDisconnected:l,onError:s,roomConnected:c,callbacks:i,onParticipantReady:u,sendMessage:_,clientTools:v,updateCurrentEventId:g})=>/*#__PURE__*/e.createElement(d,{serverUrl:t,token:o,connect:r,audio:!0,video:!1,options:{adaptiveStream:{pixelDensity:"screen"}},onConnected:a,onDisconnected:l,onError:s},/*#__PURE__*/e.createElement(p,{onReady:u,isConnected:c,callbacks:i,sendMessage:_,clientTools:v,updateCurrentEventId:g}),n),C=["serverUrl","tokenFetchUrl","clientTools"],m=/*#__PURE__*/l(null),b=(n={})=>{const t=a(m);if(!t)throw new Error("useConversation must be used within ElevenLabsProvider");const{serverUrl:o,tokenFetchUrl:r,clientTools:l}=n,s=function(e,n){if(null==e)return{};var t={};for(var o in e)if({}.hasOwnProperty.call(e,o)){if(-1!==n.indexOf(o))continue;t[o]=e[o]}return t}(n,C);return e.useEffect(()=>{o&&t.setServerUrl(o)},[t,o]),e.useEffect(()=>{r&&t.setTokenFetchUrl(r)},[t,r]),l&&t.setClientTools(l),t.setCallbacks(s),t.conversation},k=({children:a})=>{u();const[l,c]=o(""),[i,d]=o(!1),[p,C]=o("disconnected"),[b,k]=o("wss://livekit.rtc.elevenlabs.io"),[h,f]=o(void 0),[y,E]=o(""),[S,w]=o(!1),[M,T]=o(!1),x=e.useRef(1),I=e.useRef(1),D=e.useRef({}),{callbacksRef:R,setCallbacks:U}=(()=>{const e=n({}),o=t(n=>{e.current=n},[]);return{callbacksRef:e,setCallbacks:o}})(),P=e.useCallback(e=>{const n=_({},e,{onModeChange:n=>{w("speaking"===n.mode),null==e.onModeChange||e.onModeChange(n)}});U(n)},[U]),{startSession:F,endSession:A,overrides:O,customLlmExtraBody:N,dynamicVariables:V,userId:L}=((e,n,r,a,l,s)=>{const[c,i]=o({}),[d,u]=o(null),[_,p]=o({}),[g,C]=o(void 0);return{startSession:t(async t=>{try{let o;if(n("connecting"),null==e.current.onStatusChange||e.current.onStatusChange({status:"connecting"}),i(t.overrides||{}),u(t.customLlmExtraBody||null),p(t.dynamicVariables||{}),C(t.userId),t.conversationToken)o=t.conversationToken;else{if(!t.agentId)throw new Error("Either conversationToken or agentId is required");{console.info("Getting conversation token for agentId:",t.agentId);const e=t.tokenFetchUrl||s;o=await(async(e,n)=>{const t=n||"https://api.elevenlabs.io/v1/convai/conversation/token",o=await fetch(`${t}?agent_id=${e}&source=react_native_sdk&version=${v}`),r=await o.json();if(!o.ok)throw new Error(`Failed to get conversation token: ${r.detail.message}`);if(!r.token)throw new Error("No conversation token received from API");return r.token})(t.agentId,e)}}const c=(e=>{try{var n,t;return(null==(t=((null==(n=JSON.parse(atob(e.split(".")[1])).video)?void 0:n.room)||"").match(/(conv_[a-zA-Z0-9]+)/))?void 0:t[0])||""}catch(e){return console.warn("Could not extract conversation ID from token"),""}})(o);l(c),a(o),r(!0)}catch(t){throw n("disconnected"),null==e.current.onStatusChange||e.current.onStatusChange({status:"disconnected"}),null==e.current.onError||e.current.onError(t),t}},[e,n,r,a,l,s]),endSession:t(async()=>{try{r(!1),a(""),n("disconnected"),null==e.current.onStatusChange||e.current.onStatusChange({status:"disconnected"}),null==e.current.onDisconnect||e.current.onDisconnect({reason:"user"})}catch(n){throw null==e.current.onError||e.current.onError(n),n}},[e,r,a,n]),overrides:c,customLlmExtraBody:d,dynamicVariables:_,userId:g}})(R,C,d,c,E,h),{roomConnected:$,localParticipant:B,handleParticipantReady:j,handleConnected:J,handleDisconnected:K,handleError:q}=((e,a,l)=>{const[c,i]=o(!1),[d,u]=o(null),_=n(!1);r(()=>((async()=>{await s.startAudioSession()})(),()=>{s.stopAudioSession()}),[]),r(()=>{d&&c&&!_.current&&(_.current=!0,null==e.current.onConnect||e.current.onConnect({conversationId:l}))},[d,c,l,e]);const v=t(e=>{d||(u(e),a("connected"))},[d,a]),p=t(()=>{i(!0)},[]),g=t(()=>{i(!1),a("disconnected"),u(null),_.current=!1,null==e.current.onDisconnect||e.current.onDisconnect({reason:"user"})},[e,a]),C=t(n=>{console.error("LiveKit error:",n),null==e.current.onError||e.current.onError(n.message,void 0)},[e]);return{roomConnected:c,localParticipant:d,handleParticipantReady:v,handleConnected:p,handleDisconnected:g,handleError:C}})(R,C,y),z=e.useCallback(()=>{x.current=1,I.current=1,T(!1),null==R.current.onCanSendFeedbackChange||R.current.onCanSendFeedbackChange({canSendFeedback:!1}),J()},[J,R]),G=e.useCallback(()=>{T(!1),K()},[K]),{sendMessage:W}=((e,n,o)=>({sendMessage:t(async t=>{if("connected"===e&&n)try{const e=(new TextEncoder).encode(JSON.stringify(t));await n.publishData(e,{reliable:!0})}catch(e){console.error("Failed to send message via WebRTC:",e),console.error("Error details:",e),null==o.current.onError||o.current.onError(e)}else console.warn("Cannot send message: room not connected or no local participant")},[e,n,o])}))(p,B,R),Z=e.useCallback(()=>{const e=x.current!==I.current;M!==e&&(T(e),null==R.current.onCanSendFeedbackChange||R.current.onCanSendFeedbackChange({canSendFeedback:e}))},[M,R]),H=e.useCallback(e=>{M?(W({type:"feedback",score:e?"like":"dislike",event_id:x.current}),I.current=x.current,Z()):console.warn(0===I.current?"Cannot send feedback: the conversation has not started yet.":"Cannot send feedback: feedback has already been sent for the current response.")},[M,W,Z]);e.useCallback(e=>{console.warn("setVolume is not yet implemented in React Native SDK")},[]);const Q=e.useCallback(e=>{B&&B.setMicrophoneEnabled(!e)},[B]),X=e.useCallback(e=>{x.current=e,Z()},[Z]),Y=e.useCallback(e=>{j(e);const n=function(e){var n;const t={type:"conversation_initiation_client_data"};var o,r,a,l,s;return e.overrides&&(t.conversation_config_override={agent:{prompt:null==(o=e.overrides.agent)?void 0:o.prompt,first_message:null==(r=e.overrides.agent)?void 0:r.firstMessage,language:null==(a=e.overrides.agent)?void 0:a.language},tts:{voice_id:null==(l=e.overrides.tts)?void 0:l.voiceId},conversation:{text_only:null==(s=e.overrides.conversation)?void 0:s.textOnly}}),t.source_info={source:"react_native_sdk",version:(null==(n=e.overrides)||null==(n=n.client)?void 0:n.version)||v},e.customLlmExtraBody&&(t.custom_llm_extra_body=e.customLlmExtraBody),e.dynamicVariables&&(t.dynamic_variables=e.dynamicVariables),e.userId&&(t.user_id=String(e.userId)),t}({overrides:O,customLlmExtraBody:N,dynamicVariables:V,userId:L});if(n)try{const t=(new TextEncoder).encode(JSON.stringify(n));e.publishData(t,{reliable:!0})}catch(e){console.error("Failed to send overrides:",e),null==R.current.onError||R.current.onError(e)}},[j,O,N,V,L,R]),ee={startSession:F,endSession:A,status:p,isSpeaking:S,canSendFeedback:M,getId:()=>y,setMicMuted:Q,sendFeedback:H,sendContextualUpdate:e=>{W({type:"contextual_update",text:e})},sendUserMessage:e=>{W({type:"user_message",text:e})},sendUserActivity:()=>{W({type:"user_activity"})}},ne=e.useCallback(e=>{D.current=e},[]);/*#__PURE__*/return e.createElement(m.Provider,{value:{conversation:ee,callbacksRef:R,serverUrl:b,tokenFetchUrl:h,clientTools:D.current,setCallbacks:P,setServerUrl:k,setTokenFetchUrl:f,setClientTools:ne}},/*#__PURE__*/e.createElement(g,{serverUrl:b,token:l,connect:i,onConnected:z,onDisconnected:G,onError:q,roomConnected:$,callbacks:R.current,onParticipantReady:Y,sendMessage:W,clientTools:D.current,updateCurrentEventId:X},a))};export{k as ElevenLabsProvider,b as useConversation};
//# sourceMappingURL=lib.modern.js.map
