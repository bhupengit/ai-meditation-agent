import React from 'react';
import type { Callbacks, ConversationConfig, ConversationStatus, ClientToolsConfig } from './types';
interface ConversationOptions extends Callbacks, Partial<ClientToolsConfig> {
    serverUrl?: string;
    tokenFetchUrl?: string;
}
export interface Conversation {
    startSession: (config: ConversationConfig) => Promise<void>;
    endSession: () => Promise<void>;
    status: ConversationStatus;
    isSpeaking: boolean;
    canSendFeedback: boolean;
    getId: () => string;
    sendFeedback: (like: boolean) => void;
    sendContextualUpdate: (text: string) => void;
    sendUserMessage: (text: string) => void;
    sendUserActivity: () => void;
    setMicMuted: (muted: boolean) => void;
}
export declare const useConversation: (options?: ConversationOptions) => Conversation;
interface ElevenLabsProviderProps {
    children: React.ReactNode;
}
export declare const ElevenLabsProvider: React.FC<ElevenLabsProviderProps>;
export {};
