import type { ConversationConfig, ConversationStatus, Callbacks } from "../types";
export declare const useConversationSession: (callbacksRef: {
    current: Callbacks;
}, setStatus: (status: ConversationStatus) => void, setConnect: (connect: boolean) => void, setToken: (token: string) => void, setConversationId: (conversationId: string) => void, tokenFetchUrl?: string) => {
    startSession: (config: ConversationConfig) => Promise<void>;
    endSession: () => Promise<void>;
    overrides: {
        agent?: {
            prompt?: {
                prompt?: string;
            };
            firstMessage?: string;
            language?: import("../types").Language;
        };
        tts?: {
            voiceId?: string;
        };
        conversation?: {
            textOnly?: boolean;
        };
        client?: {
            source?: string;
            version?: string;
        };
    } | undefined;
    customLlmExtraBody: unknown;
    dynamicVariables: Record<string, string | number | boolean> | undefined;
    userId: string | undefined;
};
