var e=require("react"),n=require("@livekit/react-native");function t(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var r=/*#__PURE__*/t(e);function o(){return o=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)({}).hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},o.apply(null,arguments)}var a="0.5.1",l=function(t){var o=t.onReady,a=t.isConnected,l=t.callbacks,c=t.sendMessage,s=t.clientTools,i=void 0===s?{}:s,u=t.updateCurrentEventId,d=n.useLocalParticipant().localParticipant,v=r.default.useRef(1);return e.useEffect(function(){a&&d&&o(d)},[a,d,o]),n.useDataChannel(function(e){var n,t=new TextDecoder,r=JSON.parse(t.decode(e.payload));if("object"==typeof(o=r)&&null!==o&&"type"in o){var o,a,s=function(e){switch(e.type){case"user_transcript":return e.user_transcription_event.user_transcript;case"agent_response":return e.agent_response_event.agent_response;default:return null}}(r);if(null!==s&&(null==l.onMessage||l.onMessage({message:s,source:"user_transcript"===r.type?"user":"ai"})),null!=(n=e.from)&&n.isAgent&&(null==l.onModeChange||l.onModeChange({mode:null!=(a=e.from)&&a.isSpeaking?"speaking":"listening"}),"agent_response"===r.type&&u)){var d=v.current++;u(d)}switch(r.type){case"ping":c({type:"pong",event_id:r.ping_event.event_id});break;case"client_tool_call":!function(e){try{return Promise.resolve(function(){if(e.client_tool_call.tool_name in i){var n=function(n,t){try{var r=Promise.resolve(i[e.client_tool_call.tool_name](e.client_tool_call.parameters)).then(function(n){var t="object"==typeof n?JSON.stringify(n):String(n);c({type:"client_tool_result",tool_call_id:e.client_tool_call.tool_call_id,result:t,is_error:!1})})}catch(e){return t(e)}return r&&r.then?r.then(void 0,t):r}(0,function(n){null==l.onError||l.onError("Client tool execution failed with following error: "+(null==n?void 0:n.message),{clientToolName:e.client_tool_call.tool_name}),c({type:"client_tool_result",tool_call_id:e.client_tool_call.tool_call_id,result:"Client tool execution failed: "+(null==n?void 0:n.message),is_error:!0})});if(n&&n.then)return n.then(function(){})}else{if(l.onUnhandledClientToolCall)return void l.onUnhandledClientToolCall(e.client_tool_call);var t="Client tool with name "+e.client_tool_call.tool_name+" is not defined on client";null==l.onError||l.onError(t,{clientToolName:e.client_tool_call.tool_name}),c({type:"client_tool_result",tool_call_id:e.client_tool_call.tool_call_id,result:t,is_error:!0})}}())}catch(e){return Promise.reject(e)}}(r);break;case"audio":null==l.onAudio||l.onAudio(r.audio_event.audio_base_64);break;case"vad_score":null==l.onVadScore||l.onVadScore({vadScore:r.vad_score_event.vad_score});break;case"interruption":null==l.onInterruption||l.onInterruption(r.interruption_event);break;case"mcp_tool_call":null==l.onMCPToolCall||l.onMCPToolCall(r.mcp_tool_call);break;case"mcp_connection_status":null==l.onMCPConnectionStatus||l.onMCPConnectionStatus(r.mcp_connection_status);break;case"agent_tool_response":null==l.onAgentToolResponse||l.onAgentToolResponse(r.agent_tool_response);break;case"conversation_initiation_metadata":null==l.onConversationMetadata||l.onConversationMetadata(r.conversation_initiation_metadata_event);break;case"asr_initiation_metadata":null==l.onAsrInitiationMetadata||l.onAsrInitiationMetadata(r.asr_initiation_metadata_event);break;case"agent_chat_response_part":null==l.onAgentChatResponsePart||l.onAgentChatResponsePart(r.text_response_part);break;default:null==l.onDebug||l.onDebug(r)}}else null==l.onDebug||l.onDebug({type:"invalid_event",message:r})}),null},c=function(e){var t=e.children;/*#__PURE__*/return r.default.createElement(n.LiveKitRoom,{serverUrl:e.serverUrl,token:e.token,connect:e.connect,audio:!0,video:!1,options:{adaptiveStream:{pixelDensity:"screen"}},onConnected:e.onConnected,onDisconnected:e.onDisconnected,onError:e.onError},/*#__PURE__*/r.default.createElement(l,{onReady:e.onParticipantReady,isConnected:e.roomConnected,callbacks:e.callbacks,sendMessage:e.sendMessage,clientTools:e.clientTools,updateCurrentEventId:e.updateCurrentEventId}),t)},s=["serverUrl","tokenFetchUrl","clientTools"],i=/*#__PURE__*/e.createContext(null);exports.ElevenLabsProvider=function(t){var l=t.children;n.registerGlobals();var s=e.useState(""),u=s[0],d=s[1],v=e.useState(!1),f=v[0],_=v[1],p=e.useState("disconnected"),h=p[0],m=p[1],C=e.useState("wss://livekit.rtc.elevenlabs.io"),g=C[0],b=C[1],k=e.useState(void 0),y=k[0],S=k[1],E=e.useState(""),P=E[0],w=E[1],x=e.useState(!1),M=x[0],T=x[1],I=e.useState(!1),R=I[0],D=I[1],U=r.default.useRef(1),F=r.default.useRef(1),A=r.default.useRef({}),j=function(){var n=e.useRef({}),t=e.useCallback(function(e){n.current=e},[]);return{callbacksRef:n,setCallbacks:t}}(),L=j.callbacksRef,O=j.setCallbacks,N=r.default.useCallback(function(e){var n=o({},e,{onModeChange:function(n){T("speaking"===n.mode),null==e.onModeChange||e.onModeChange(n)}});O(n)},[O]),V=function(n,t,r,o,l,c){var s=e.useState({}),i=s[0],u=s[1],d=e.useState(null),v=d[0],f=d[1],_=e.useState({}),p=_[0],h=_[1],m=e.useState(void 0),C=m[0],g=m[1];return{startSession:e.useCallback(function(e){try{return Promise.resolve(function(s,i){try{var d=function(){function s(e){var n=function(e){try{var n,t;return(null==(t=((null==(n=JSON.parse(atob(e.split(".")[1])).video)?void 0:n.room)||"").match(/(conv_[a-zA-Z0-9]+)/))?void 0:t[0])||""}catch(e){return console.warn("Could not extract conversation ID from token"),""}}(i);l(n),o(i),r(!0)}var i;t("connecting"),null==n.current.onStatusChange||n.current.onStatusChange({status:"connecting"}),u(e.overrides||{}),f(e.customLlmExtraBody||null),h(e.dynamicVariables||{}),g(e.userId);var d=function(){if(!e.conversationToken)return function(){if(e.agentId)return console.info("Getting conversation token for agentId:",e.agentId),Promise.resolve(function(e,n){try{return Promise.resolve(fetch((n||"https://api.elevenlabs.io/v1/convai/conversation/token")+"?agent_id="+e+"&source=react_native_sdk&version="+a)).then(function(e){return Promise.resolve(e.json()).then(function(n){if(!e.ok)throw new Error("Failed to get conversation token: "+n.detail.message);if(!n.token)throw new Error("No conversation token received from API");return n.token})})}catch(e){return Promise.reject(e)}}(e.agentId,e.tokenFetchUrl||c)).then(function(e){i=e});throw new Error("Either conversationToken or agentId is required")}();i=e.conversationToken}();return d&&d.then?d.then(s):s()}()}catch(e){return i(e)}return d&&d.then?d.then(void 0,i):d}(0,function(e){throw t("disconnected"),null==n.current.onStatusChange||n.current.onStatusChange({status:"disconnected"}),null==n.current.onError||n.current.onError(e),e}))}catch(e){return Promise.reject(e)}},[n,t,r,o,l,c]),endSession:e.useCallback(function(){try{try{r(!1),o(""),t("disconnected"),null==n.current.onStatusChange||n.current.onStatusChange({status:"disconnected"}),null==n.current.onDisconnect||n.current.onDisconnect({reason:"user"})}catch(e){throw null==n.current.onError||n.current.onError(e),e}return Promise.resolve()}catch(e){return Promise.reject(e)}},[n,r,o,t]),overrides:i,customLlmExtraBody:v,dynamicVariables:p,userId:C}}(L,m,_,d,w,y),B=V.startSession,J=V.endSession,q=V.overrides,K=V.customLlmExtraBody,G=V.dynamicVariables,z=V.userId,W=function(t,r,o){var a=e.useState(!1),l=a[0],c=a[1],s=e.useState(null),i=s[0],u=s[1],d=e.useRef(!1);e.useEffect(function(){return function(){try{return Promise.resolve(n.AudioSession.startAudioSession()).then(function(){})}catch(e){return Promise.reject(e)}}(),function(){n.AudioSession.stopAudioSession()}},[]),e.useEffect(function(){i&&l&&!d.current&&(d.current=!0,null==t.current.onConnect||t.current.onConnect({conversationId:o}))},[i,l,o,t]);var v=e.useCallback(function(e){i||(u(e),r("connected"))},[i,r]),f=e.useCallback(function(){c(!0)},[]),_=e.useCallback(function(){c(!1),r("disconnected"),u(null),d.current=!1,null==t.current.onDisconnect||t.current.onDisconnect({reason:"user"})},[t,r]),p=e.useCallback(function(e){console.error("LiveKit error:",e),null==t.current.onError||t.current.onError(e.message,void 0)},[t]);return{roomConnected:l,localParticipant:i,handleParticipantReady:v,handleConnected:f,handleDisconnected:_,handleError:p}}(L,m,P),Z=W.roomConnected,H=W.localParticipant,Q=W.handleParticipantReady,X=W.handleConnected,Y=W.handleDisconnected,$=W.handleError,ee=r.default.useCallback(function(){U.current=1,F.current=1,D(!1),null==L.current.onCanSendFeedbackChange||L.current.onCanSendFeedbackChange({canSendFeedback:!1}),X()},[X,L]),ne=r.default.useCallback(function(){D(!1),Y()},[Y]),te=function(n,t,r){return{sendMessage:e.useCallback(function(e){try{if("connected"!==n||!t)return console.warn("Cannot send message: room not connected or no local participant"),Promise.resolve();var o=function(n,r){try{var o=(a=(new TextEncoder).encode(JSON.stringify(e)),Promise.resolve(t.publishData(a,{reliable:!0})).then(function(){}))}catch(e){return r(e)}var a;return o&&o.then?o.then(void 0,r):o}(0,function(e){console.error("Failed to send message via WebRTC:",e),console.error("Error details:",e),null==r.current.onError||r.current.onError(e)});return Promise.resolve(o&&o.then?o.then(function(){}):void 0)}catch(e){return Promise.reject(e)}},[n,t,r])}}(h,H,L),re=te.sendMessage,oe=r.default.useCallback(function(){var e=U.current!==F.current;R!==e&&(D(e),null==L.current.onCanSendFeedbackChange||L.current.onCanSendFeedbackChange({canSendFeedback:e}))},[R,L]),ae=r.default.useCallback(function(e){R?(re({type:"feedback",score:e?"like":"dislike",event_id:U.current}),F.current=U.current,oe()):console.warn(0===F.current?"Cannot send feedback: the conversation has not started yet.":"Cannot send feedback: feedback has already been sent for the current response.")},[R,re,oe]);r.default.useCallback(function(e){console.warn("setVolume is not yet implemented in React Native SDK")},[]);var le=r.default.useCallback(function(e){H&&H.setMicrophoneEnabled(!e)},[H]),ce=r.default.useCallback(function(e){U.current=e,oe()},[oe]),se=r.default.useCallback(function(e){Q(e);var n=function(e){var n,t,r,o,l,c,s={type:"conversation_initiation_client_data"};return e.overrides&&(s.conversation_config_override={agent:{prompt:null==(t=e.overrides.agent)?void 0:t.prompt,first_message:null==(r=e.overrides.agent)?void 0:r.firstMessage,language:null==(o=e.overrides.agent)?void 0:o.language},tts:{voice_id:null==(l=e.overrides.tts)?void 0:l.voiceId},conversation:{text_only:null==(c=e.overrides.conversation)?void 0:c.textOnly}}),s.source_info={source:"react_native_sdk",version:(null==(n=e.overrides)||null==(n=n.client)?void 0:n.version)||a},e.customLlmExtraBody&&(s.custom_llm_extra_body=e.customLlmExtraBody),e.dynamicVariables&&(s.dynamic_variables=e.dynamicVariables),e.userId&&(s.user_id=String(e.userId)),s}({overrides:q,customLlmExtraBody:K,dynamicVariables:G,userId:z});if(n)try{var t=(new TextEncoder).encode(JSON.stringify(n));e.publishData(t,{reliable:!0})}catch(e){console.error("Failed to send overrides:",e),null==L.current.onError||L.current.onError(e)}},[Q,q,K,G,z,L]),ie={startSession:B,endSession:J,status:h,isSpeaking:M,canSendFeedback:R,getId:function(){return P},setMicMuted:le,sendFeedback:ae,sendContextualUpdate:function(e){re({type:"contextual_update",text:e})},sendUserMessage:function(e){re({type:"user_message",text:e})},sendUserActivity:function(){re({type:"user_activity"})}},ue=r.default.useCallback(function(e){A.current=e},[]);/*#__PURE__*/return r.default.createElement(i.Provider,{value:{conversation:ie,callbacksRef:L,serverUrl:g,tokenFetchUrl:y,clientTools:A.current,setCallbacks:N,setServerUrl:b,setTokenFetchUrl:S,setClientTools:ue}},/*#__PURE__*/r.default.createElement(c,{serverUrl:g,token:u,connect:f,onConnected:ee,onDisconnected:ne,onError:$,roomConnected:Z,callbacks:L.current,onParticipantReady:se,sendMessage:re,clientTools:A.current,updateCurrentEventId:ce},l))},exports.useConversation=function(n){void 0===n&&(n={});var t=e.useContext(i);if(!t)throw new Error("useConversation must be used within ElevenLabsProvider");var o=n.serverUrl,a=n.tokenFetchUrl,l=n.clientTools,c=function(e,n){if(null==e)return{};var t={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(-1!==n.indexOf(r))continue;t[r]=e[r]}return t}(n,s);return r.default.useEffect(function(){o&&t.setServerUrl(o)},[t,o]),r.default.useEffect(function(){a&&t.setTokenFetchUrl(a)},[t,a]),l&&t.setClientTools(l),t.setCallbacks(c),t.conversation};
//# sourceMappingURL=lib.js.map
