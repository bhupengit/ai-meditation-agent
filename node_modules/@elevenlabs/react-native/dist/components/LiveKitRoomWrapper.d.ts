import React from 'react';
import type { LocalParticipant } from 'livekit-client';
import type { Callbacks, ClientToolsConfig } from '../types';
interface LiveKitRoomWrapperProps {
    children: React.ReactNode;
    serverUrl: string;
    token: string;
    connect: boolean;
    onConnected: () => void;
    onDisconnected: () => void;
    onError: (error: Error) => void;
    roomConnected: boolean;
    callbacks: Callbacks;
    onParticipantReady: (participant: LocalParticipant) => void;
    sendMessage: (message: unknown) => void;
    clientTools: ClientToolsConfig['clientTools'];
    updateCurrentEventId?: (eventId: number) => void;
}
export declare const LiveKitRoomWrapper: ({ children, serverUrl, token, connect, onConnected, onDisconnected, onError, roomConnected, callbacks, onParticipantReady, sendMessage, clientTools, updateCurrentEventId, }: LiveKitRoomWrapperProps) => React.JSX.Element;
export {};
